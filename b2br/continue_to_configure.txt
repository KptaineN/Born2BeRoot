Tapez d'abord sudo apt-get install libpam-pwquality pour installer la bibliothèque de vérification de la qualité des mots de passe
Tapez ensuite "sudo vim /etc/pam.d/common-password"
Recherchez cette ligne. mot de passe requis pam_deny.so ou
Ajoutez ceci à la fin de cette ligne "minlen=10 ucredit=-1 lcredit=-1 dcredit=-1 maxrepeat=3 reject_username difok=7 enforce_for_root"
4.1 La ligne devrait maintenant ressembler à ceci - mot de passe requis pam_pwquality.so retry=3 minlen=10 ucredit=-1 lcredit=-1 dcredit=-1 maxrepeat=3 reject_username difok=7 enforce_for_root
Enregistrez et quittez Vim
Tapez ensuite dans votre machine virtuelle "sudo vim /etc/login.defs"
Trouvez cette partie PASS_MAX_DAYS 9999 PASS_MIN_DAYS 0 PASS_WARN_AGE 7
Changez cette partie en PASS_MAX_DAYS 30 et PASS_MIN_DAYS 2 conservez PASS_WARN_AGE 7
Enfin, tapez "sudo reboot" pour redémarrer le les changements affectent
Créons un groupe, tapez d'abord "sudo groupadd user42" pour créer un groupe
Tapez ensuite "sudo groupadd evaluating" pour créer un groupe d'évaluation
Enfin, tapez "getent group" pour vérifier si le groupe a été créé
Tapez d'abord "cut -d: -f1 /etc/passwd" pour vérifier tous les utilisateurs locaux
créons un utilisateur Tapez "sudo adduser new_username" pour créer un nom d'utilisateur - notez votre new_username, car vous en aurez besoin plus tard.
2.1 Tapez "sudo usermod -aG user42 votre_nom_utilisateur"
2.2 Tapez "sudo usermod -aG evaluating votre_nouveau_nom_utilisateur"
Tapez "getent group user42" pour vérifier si l'utilisateur est le groupe
Tapez "getent group evaluating" pour vérifier le groupe
Tapez "groups" pour voir à quels groupes appartient le compte utilisateur
Enfin, tapez "chage -l votre_nouveau_nom_utilisateur" pour vérifier si les règles de mot de passe fonctionnent dans les utilisateurs
créons 'sudo.log'
Configurons le groupe Sudoers
Tapez d'abord "sudo nano /etc/sudoers" pour accéder au fichier sudoers
CODE:
Modifiez maintenant votre fichier sudoers pour qu'il ressemble à ce qui suit en ajoutant toutes les valeurs par défaut dans l'image ci-dessous -
******************************************************************************************************************
Defaults	env_reset
Defaults	mail_badpass
Defaults	secure_path="/usr/local/sbin:/usr/local/bin:/usr/bin:/sbin:/bin"
Defaults	badpass_message="Password is wrong, please try again!"
Defaults	passwd_tries=3
Defaults	logfile="/var/log/sudo/sudo.log"
Defaults	log_input, log_output
Defaults	requiretty
******************************************************************************************************************
end
Passons à la configuration de Crontab
Tapez ensuite "apt-get install -y net-tools" pour installer les outils netstat
Tapez ensuite "cd /usr/local/bin/"
Tapez ensuite "touch monitoring.sh"
Enfin, tapez "chmod 777 monitoring.sh"
CODE:
Copiez ce texte (Pour copier le texte ci-dessous, passez votre souris sur le coin droit du texte ci-dessous et une icône de copie apparaîtra)
******************************************************************************************************************
#!/bin/bash
arc=$(uname -a)
pcpu=$(grep "physical id" /proc/cpuinfo | sort | uniq | wc -l) 
vcpu=$(grep "^processor" /proc/cpuinfo | wc -l)
fram=$(free -m | awk '$1 == "Mem:" {print $2}')
uram=$(free -m | awk '$1 == "Mem:" {print $3}')
pram=$(free | awk '$1 == "Mem:" {printf("%.2f"), $3/$2*100}')
fdisk=$(df -BG | grep '^/dev/' | grep -v '/boot$' | awk '{ft += $2} END {print ft}')
udisk=$(df -BM | grep '^/dev/' | grep -v '/boot$' | awk '{ut += $3} END {print ut}')
pdisk=$(df -BM | grep '^/dev/' | grep -v '/boot$' | awk '{ut += $3} {ft+= $2} END {printf("%d"), ut/ft*100}')
cpul=$(top -bn1 | grep '^%Cpu' | cut -c 9- | xargs | awk '{printf("%.1f%%"), $1 + $3}')
lb=$(who -b | awk '$1 == "system" {print $3 " " $4}')
lvmu=$(if [ $(lsblk | grep "lvm" | wc -l) -eq 0 ]; then echo no; else echo yes; fi)
ctcp=$(ss -Ht state established | wc -l)
ulog=$(users | wc -w)
ip=$(hostname -I)
mac=$(ip link show | grep "ether" | awk '{print $2}')
cmds=$(journalctl _COMM=sudo | grep COMMAND | wc -l)
wall "	#Architecture: $arc
	#CPU physical: $pcpu
	#vCPU: $vcpu
	#Memory Usage: $uram/${fram}MB ($pram%)
	#Disk Usage: $udisk/${fdisk}Gb ($pdisk%)
	#CPU load: $cpul
	#Last boot: $lb
	#LVM use: $lvmu
	#Connections TCP: $ctcp ESTABLISHED
	#User log: $ulog
	#Network: IP $ip ($mac)
	#Sudo: $cmds cmd"
******************************************************************************************************************
end
Ouvrez ensuite un iTerm2 séparé de votre machine virtuelle et saisissez iTerm ssh votre_nom_d'hôte42@127.0.0.1 -p 4242 puis saisissez votre mot de passe lorsqu'il vous le demande.
Saisissez ensuite "cd /usr/local/bin."
Saisissez ensuite "nano monitoring.sh" et collez le texte ci-dessus dans le vim monitoring.sh que vous venez de créer, en exécutant la commande + v sur votre clavier Apple.
Enregistrez et quittez votre monitoring.sh
5.1 - Tapez ensuite 'exit' pour quitter la connexion SSH iTerm.
5.2 - Revenez ensuite à votre machine virtuelle (pas à iTerm) et continuez avec les étapes ci-dessous.
Tapez ensuite "sudo visudo" pour ouvrir votre fichier sudoers
Ajoutez dans cette ligne "votre_nom_utilisateur ALL=(ALL) NOPASSWD: /usr/local/bin/monitoring.sh" sous laquelle il est écrit %sudo ALL=(ALL:ALL) ALL
Puis quittez et enregistrez votre fichier sudoers
Tapez maintenant "sudo reboot" dans votre machine virtuelle pour redémarrer sudo
Tapez "sudo /usr/local/bin/monitoring.sh" pour exécuter votre script en tant que su (super utilisateur)
Tapez "sudo crontab -u root -e" pour ouvrir le crontab et ajouter la règle
Enfin à la fin du crontab, tapez ce qui suit */10 * * * * /usr/local/bin/monitoring.sh cela signifie que toutes les 10 minutes, ce script s'affichera
